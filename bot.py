import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
import subprocess
import os

TOKEN = "–¢–û–ö–ï–ù_–°–Æ–î–ê"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = Bot(token=TOKEN)
dp = Dispatcher()

menu_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–¢–æ–≤–∞—Ä—ã')],
    [KeyboardButton(text='–£—Å–ª—É–≥–∏')],
    [KeyboardButton(text='–†–∞–±–æ—Ç—ã')],
    [KeyboardButton(text='–°—Ç–æ–ø üõë')]
], resize_keyboard=True)

process = None

@dp.message(Command('start'))
async def start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤.\n–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=menu_kb)

@dp.message()
async def handle_message(message: types.Message):
    global process

    text = message.text.lower()
    if text in ['—Ç–æ–≤–∞—Ä—ã', '—É—Å–ª—É–≥–∏', '—Ä–∞–±–æ—Ç—ã']:
        if process and process.poll() is None:
            await message.answer("‚öôÔ∏è –ü–∞—Ä—Å–µ—Ä —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –î–æ–∂–¥–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏ *–°—Ç–æ–ø üõë*.", parse_mode='Markdown')
            return

        await message.answer(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Å–µ—Ä –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: *{text.capitalize()}*", parse_mode='Markdown')
        open('stop.flag', 'w').close() if os.path.exists('stop.flag') else None  # —Å–±—Ä–æ—Å —Å—Ç–æ–ø-—Ñ–∞–π–ª–∞

        process = subprocess.Popen(['python', 'parser.py', text])
        await asyncio.sleep(3)
        await message.answer("‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–ø—É—â–µ–Ω! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –Ω–∞–∂–º–∏ *–°—Ç–æ–ø üõë*.", parse_mode='Markdown')

    elif text == '—Å—Ç–æ–ø üõë':
        if process and process.poll() is None:
            open('stop.flag', 'w').close()
            await message.answer("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞—Ä—Å–µ—Ä... –ñ–¥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
            process.wait()
            await asyncio.sleep(2)
            if os.path.exists('tenders.xlsx'):
                with open('tenders.xlsx', 'rb') as file:
                    await bot.send_document(message.chat.id, file)
                await message.answer("‚úÖ –û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–∞–π–ª Excel —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!")
            else:
                await message.answer("‚ö†Ô∏è –§–∞–π–ª Excel –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –±—ã–ª–æ –¥–∞–Ω–Ω—ã—Ö.")
        else:
            await message.answer("‚ÑπÔ∏è –ü–∞—Ä—Å–µ—Ä —Å–µ–π—á–∞—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω.")

    else:
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –∫–Ω–æ–ø–∫–∏.", reply_markup=menu_kb)

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
