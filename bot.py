import asyncio
import os
import json
import pandas as pd
import subprocess
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from aiohttp import web
from dotenv import load_dotenv

# Load .env
load_dotenv()
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

if not TOKEN or not WEBHOOK_URL:
    raise ValueError("‚ùå TOKEN or WEBHOOK_URL is missing! Check your .env file or environment settings.")

bot = Bot(token=TOKEN)
dp = Dispatcher()
menu_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–¢–æ–≤–∞—Ä—ã')],
    [KeyboardButton(text='–£—Å–ª—É–≥–∏')],
    [KeyboardButton(text='–†–∞–±–æ—Ç—ã')],
    [KeyboardButton(text='–°—Ç–æ–ø üõë')]
], resize_keyboard=True)

process_flag_file = "status.flag"

@dp.message(Command('start'))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤.\n–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=menu_kb)

@dp.message()
async def handle_message(message: types.Message):
    text = message.text.lower()
    if text in ['—Ç–æ–≤–∞—Ä—ã', '—É—Å–ª—É–≥–∏', '—Ä–∞–±–æ—Ç—ã']:
        if os.path.exists(process_flag_file):
            await message.answer("‚öôÔ∏è –ü–∞—Ä—Å–µ—Ä —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–æ–∂–¥–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏ '–°—Ç–æ–ø üõë'.")
            return

        await message.answer(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Å–µ—Ä –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {text.capitalize()}")
        open(process_flag_file, 'w').close()
        try:
            subprocess.run(['python', 'parser.py', text], check=True)
            if os.path.exists('tenders.xlsx'):
                with open('tenders.xlsx', 'rb') as file:
                    await bot.send_document(message.chat.id, file)
                await message.answer("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
            else:
                await message.answer("‚ö†Ô∏è –§–∞–π–ª tenders.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –ø–∞—Ä—Å–µ—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª.")
        except subprocess.CalledProcessError as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞:\n{e}")
        finally:
            if os.path.exists(process_flag_file):
                os.remove(process_flag_file)

    elif text == '—Å—Ç–æ–ø üõë':
        if os.path.exists(process_flag_file):
            os.remove(process_flag_file)
            await message.answer("üõë –ü–∞—Ä—Å–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\n–§–∞–π–ª —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏:")
            if os.path.exists('tenders.xlsx'):
                with open('tenders.xlsx', 'rb') as file:
                    await bot.send_document(message.chat.id, file)
            else:
                await message.answer("‚ö†Ô∏è –§–∞–π–ª tenders.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        else:
            await message.answer("‚ÑπÔ∏è –ü–∞—Ä—Å–µ—Ä —Å–µ–π—á–∞—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω.")

    else:
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –∫–Ω–æ–ø–∫–∏.", reply_markup=menu_kb)

async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(app):
    await bot.delete_webhook()

app = web.Application()
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path="/webhook")
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)

if __name__ == "__main__":
    web.run_app(app, port=int(os.environ.get("PORT", 8080)))
